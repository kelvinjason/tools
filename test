import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.pdmodel.PDPage;
import org.apache.pdfbox.pdmodel.PDPageContentStream;
import org.apache.pdfbox.pdmodel.font.PDType1Font;
import org.apache.pdfbox.text.PDFTextStripper;
import org.apache.pdfbox.text.TextPosition;

import java.io.File;
import java.io.IOException;
import java.util.List;

public class PDFPlaceholderReplacer {

    public static void main(String[] args) {
        String templatePath = "path/to/your/template.pdf";
        String outputPath = "path/to/output/filled.pdf";

        try (PDDocument document = PDDocument.load(new File(templatePath))) {
            PlaceholderPDFTextStripper stripper = new PlaceholderPDFTextStripper("<name>", "kelvin");
            stripper.setSortByPosition(true);

            // 遍历每一页并处理占位符
            for (int pageIndex = 0; pageIndex < document.getNumberOfPages(); pageIndex++) {
                stripper.setStartPage(pageIndex + 1);
                stripper.setEndPage(pageIndex + 1);
                stripper.writeText(document, null);
            }

            document.save(outputPath);
            System.out.println("PDF placeholders replaced and saved successfully.");
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    static class PlaceholderPDFTextStripper extends PDFTextStripper {

        private final String placeholder;
        private final String replacement;

        public PlaceholderPDFTextStripper(String placeholder, String replacement) throws IOException {
            this.placeholder = placeholder;
            this.replacement = replacement;
        }

        @Override
        protected void writeString(String text, List<TextPosition> textPositions) throws IOException {
            if (text.contains(placeholder)) {
                String replacedText = text.replace(placeholder, replacement);
                PDPageContentStream contentStream = new PDPageContentStream(
                        getDocument(), getCurrentPage(), PDPageContentStream.AppendMode.APPEND, true);
                contentStream.setFont(PDType1Font.HELVETICA, 12);
                contentStream.beginText();
                contentStream.setTextMatrix(textPositions.get(0).getTextMatrix());
                contentStream.showText(replacedText);
                contentStream.endText();
                contentStream.close();
            }
        }
    }
}
